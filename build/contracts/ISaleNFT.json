{
  "contractName": "ISaleNFT",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Sale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "TokenListing",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listTokenForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        }
      ],
      "name": "purchaseToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getSalePrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Sale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenListing\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSalePrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listTokenForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"}],\"name\":\"purchaseToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for sale functionality in ERC-721 token contracts. Contracts implementing { ISaleNFT } interface allow non-fungible token owners to sell NFTs for a stated price. Purchasers can buy listed tokens by paying the listing price. --------------- RECOMMENDATIONS --------------- - This interface is designed to be implemented in NFT collections   that are to be traded in independent applications, while avoi-   ding the complexity of building a marketplace. - Sale functionality should be kept off-chain as much as possible,   as this provides a much friendlier and smoother UX. - This interface is suitable for NFTs that are not expected to    change ownership with high frequency and which are to be traded   under simple but robust sales rules.\",\"events\":{\"Sale(uint256,address,address,uint256)\":{\"details\":\"Emitted when a 'tokenId' is purchased by the 'buyer' from  the 'seller' at a 'price'\"},\"TokenListing(uint256,address,uint256)\":{\"details\":\"Emitted when a 'tokenId' is listed for sale by the 'owner'  at a 'price'\"}},\"kind\":\"dev\",\"methods\":{\"getSalePrice(uint256)\":{\"params\":{\"tokenId\":\"The token identifier\"},\"returns\":{\"_0\":\"bool 'true' if the 'tokenId' is listed for sale, 'false' otherwise\",\"_1\":\"uint256 the price if 'tokenId' is listed for sale, zero otherwise\"}},\"listTokenForSale(uint256,uint256)\":{\"details\":\"Throws if: - 'msg.sender' is not the owner of the 'tokenId' - 'price' is equal to zero\",\"params\":{\"price\":\"The listing price of the token Emits a 'TokenListing' event\",\"tokenId\":\"The token identifier\"}},\"purchaseToken(uint256,address)\":{\"details\":\"This function is payable as it accepts payments.  Throws if: - 'tokenId' is not listed for sale - 'msg.value' is different to the listing price - 'purchaser' is the zero address - 'msg.sender' is different to the 'purchaser'\",\"params\":{\"purchaser\":\"The address of the buyer Emits a 'Sale' event\",\"tokenId\":\"The token identifier\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getSalePrice(uint256)\":{\"notice\":\"Returns the sale price of a listed token\"},\"listTokenForSale(uint256,uint256)\":{\"notice\":\"Allows 'tokenId' owners to list tokens for sale at a 'price'\"},\"purchaseToken(uint256,address)\":{\"notice\":\"Allows users to purchase listed tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/scm-interfaces/iscm-09.sol\":\"ISaleNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/scm-interfaces/iscm-09.sol\":{\"keccak256\":\"0x8d4d84280d83c501352a4b7f6e5c40d11ce0866554a4c3c9fd109bc775e51cd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbf22a46a5fc5c8e36a3a04c0293d5133ea61a529e894002b9fc74cfb5cae781\",\"dweb:/ipfs/QmceUo4KZcK2VnPj58SgEZUC29Pb5NBc1BCYw26KSXZnRu\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// Developed by: Archivist (version: v0.1)\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface for sale functionality in ERC-721 token contracts.\n * Contracts implementing { ISaleNFT } interface allow non-fungible\n * token owners to sell NFTs for a stated price. Purchasers can buy\n * listed tokens by paying the listing price.\n *\n * ---------------\n * RECOMMENDATIONS\n * ---------------\n * - This interface is designed to be implemented in NFT collections\n *   that are to be traded in independent applications, while avoi-\n *   ding the complexity of building a marketplace.\n *\n * - Sale functionality should be kept off-chain as much as possible,\n *   as this provides a much friendlier and smoother UX.\n *\n * - This interface is suitable for NFTs that are not expected to \n *   change ownership with high frequency and which are to be traded\n *   under simple but robust sales rules.\n */\n\n\ninterface ISaleNFT {\n\n    /**\n     * @dev Emitted when a 'tokenId' is listed for sale by the 'owner' \n     * at a 'price'\n     */\n    event TokenListing(uint256 tokenId, address owner, uint256 price);\n\n\n    /**\n     * @dev Emitted when a 'tokenId' is purchased by the 'buyer' from \n     * the 'seller' at a 'price'\n     */\n    event Sale(uint256 tokenId, address seller, address buyer, uint256 price);\n\n\n    /**\n     * @notice Allows 'tokenId' owners to list tokens for sale at a 'price'\n     * @dev Throws if:\n     * - 'msg.sender' is not the owner of the 'tokenId'\n     * - 'price' is equal to zero\n     * @param tokenId The token identifier\n     * @param price The listing price of the token\n     *\n     * Emits a 'TokenListing' event\n     */\n    function listTokenForSale(uint256 tokenId, uint256 price) external;\n\n\n    /**\n     * @notice Allows users to purchase listed tokens\n     * @dev This function is payable as it accepts payments. \n     * Throws if:\n     * - 'tokenId' is not listed for sale\n     * - 'msg.value' is different to the listing price\n     * - 'purchaser' is the zero address\n     * - 'msg.sender' is different to the 'purchaser'\n     * @param tokenId The token identifier\n     * @param purchaser The address of the buyer\n     *\n     * Emits a 'Sale' event\n     */\n    function purchaseToken(uint256 tokenId, address purchaser) external payable;\n\n\n    /**\n     * @notice Returns the sale price of a listed token\n     * @param tokenId The token identifier\n     * @return bool 'true' if the 'tokenId' is listed for sale, 'false' otherwise\n     * @return uint256 the price if 'tokenId' is listed for sale, zero otherwise\n     */\n    function getSalePrice(uint256 tokenId) external returns(bool, uint256);\n\n}",
  "sourcePath": "/Users/rodrigoruanoperez/Desktop/TFM/CODE_3/contracts/scm-interfaces/iscm-09.sol",
  "ast": {
    "absolutePath": "project:/contracts/scm-interfaces/iscm-09.sol",
    "exportedSymbols": {
      "ISaleNFT": [
        658
      ]
    },
    "id": 659,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 610,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "75:23:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISaleNFT",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 611,
          "nodeType": "StructuredDocumentation",
          "src": "100:818:8",
          "text": " @dev Interface for sale functionality in ERC-721 token contracts.\n Contracts implementing { ISaleNFT } interface allow non-fungible\n token owners to sell NFTs for a stated price. Purchasers can buy\n listed tokens by paying the listing price.\n ---------------\n RECOMMENDATIONS\n ---------------\n - This interface is designed to be implemented in NFT collections\n   that are to be traded in independent applications, while avoi-\n   ding the complexity of building a marketplace.\n - Sale functionality should be kept off-chain as much as possible,\n   as this provides a much friendlier and smoother UX.\n - This interface is suitable for NFTs that are not expected to \n   change ownership with high frequency and which are to be traded\n   under simple but robust sales rules."
        },
        "fullyImplemented": false,
        "id": 658,
        "linearizedBaseContracts": [
          658
        ],
        "name": "ISaleNFT",
        "nameLocation": "931:8:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 612,
              "nodeType": "StructuredDocumentation",
              "src": "947:103:8",
              "text": " @dev Emitted when a 'tokenId' is listed for sale by the 'owner' \n at a 'price'"
            },
            "eventSelector": "879efc58e6e6ff01e564527e5107821213dbad1c519e63e218508cf955c79ca9",
            "id": 620,
            "name": "TokenListing",
            "nameLocation": "1061:12:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1082:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "1074:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1099:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "1091:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1114:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "1106:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1073:47:8"
            },
            "src": "1055:66:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 621,
              "nodeType": "StructuredDocumentation",
              "src": "1128:115:8",
              "text": " @dev Emitted when a 'tokenId' is purchased by the 'buyer' from \n the 'seller' at a 'price'"
            },
            "eventSelector": "88863d5e20f64464b554931394e2e4b6f09c10015147215bf26b3ba5070acebe",
            "id": 631,
            "name": "Sale",
            "nameLocation": "1254:4:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1267:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "1259:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 625,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1284:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "1276:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 627,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1300:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "1292:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 629,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1315:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "1307:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1258:63:8"
            },
            "src": "1248:74:8"
          },
          {
            "documentation": {
              "id": 632,
              "nodeType": "StructuredDocumentation",
              "src": "1329:337:8",
              "text": " @notice Allows 'tokenId' owners to list tokens for sale at a 'price'\n @dev Throws if:\n - 'msg.sender' is not the owner of the 'tokenId'\n - 'price' is equal to zero\n @param tokenId The token identifier\n @param price The listing price of the token\n Emits a 'TokenListing' event"
            },
            "functionSelector": "2406e677",
            "id": 639,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "listTokenForSale",
            "nameLocation": "1680:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1705:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "1697:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1722:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "1714:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1696:32:8"
            },
            "returnParameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:0:8"
            },
            "scope": 658,
            "src": "1671:67:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 640,
              "nodeType": "StructuredDocumentation",
              "src": "1745:464:8",
              "text": " @notice Allows users to purchase listed tokens\n @dev This function is payable as it accepts payments. \n Throws if:\n - 'tokenId' is not listed for sale\n - 'msg.value' is different to the listing price\n - 'purchaser' is the zero address\n - 'msg.sender' is different to the 'purchaser'\n @param tokenId The token identifier\n @param purchaser The address of the buyer\n Emits a 'Sale' event"
            },
            "functionSelector": "f3f11bc3",
            "id": 647,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseToken",
            "nameLocation": "2223:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2245:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 647,
                  "src": "2237:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "purchaser",
                  "nameLocation": "2262:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 647,
                  "src": "2254:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2236:36:8"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2289:0:8"
            },
            "scope": 658,
            "src": "2214:76:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 648,
              "nodeType": "StructuredDocumentation",
              "src": "2297:273:8",
              "text": " @notice Returns the sale price of a listed token\n @param tokenId The token identifier\n @return bool 'true' if the 'tokenId' is listed for sale, 'false' otherwise\n @return uint256 the price if 'tokenId' is listed for sale, zero otherwise"
            },
            "functionSelector": "f8eb5fc5",
            "id": 657,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSalePrice",
            "nameLocation": "2584:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2605:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "2597:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2597:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2596:17:8"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "2631:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "2637:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2630:15:8"
            },
            "scope": 658,
            "src": "2575:71:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 659,
        "src": "921:1728:8",
        "usedErrors": []
      }
    ],
    "src": "75:2574:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-01-11T09:26:54.288Z",
  "devdoc": {
    "details": "Interface for sale functionality in ERC-721 token contracts. Contracts implementing { ISaleNFT } interface allow non-fungible token owners to sell NFTs for a stated price. Purchasers can buy listed tokens by paying the listing price. --------------- RECOMMENDATIONS --------------- - This interface is designed to be implemented in NFT collections   that are to be traded in independent applications, while avoi-   ding the complexity of building a marketplace. - Sale functionality should be kept off-chain as much as possible,   as this provides a much friendlier and smoother UX. - This interface is suitable for NFTs that are not expected to    change ownership with high frequency and which are to be traded   under simple but robust sales rules.",
    "events": {
      "Sale(uint256,address,address,uint256)": {
        "details": "Emitted when a 'tokenId' is purchased by the 'buyer' from  the 'seller' at a 'price'"
      },
      "TokenListing(uint256,address,uint256)": {
        "details": "Emitted when a 'tokenId' is listed for sale by the 'owner'  at a 'price'"
      }
    },
    "kind": "dev",
    "methods": {
      "getSalePrice(uint256)": {
        "params": {
          "tokenId": "The token identifier"
        },
        "returns": {
          "_0": "bool 'true' if the 'tokenId' is listed for sale, 'false' otherwise",
          "_1": "uint256 the price if 'tokenId' is listed for sale, zero otherwise"
        }
      },
      "listTokenForSale(uint256,uint256)": {
        "details": "Throws if: - 'msg.sender' is not the owner of the 'tokenId' - 'price' is equal to zero",
        "params": {
          "price": "The listing price of the token Emits a 'TokenListing' event",
          "tokenId": "The token identifier"
        }
      },
      "purchaseToken(uint256,address)": {
        "details": "This function is payable as it accepts payments.  Throws if: - 'tokenId' is not listed for sale - 'msg.value' is different to the listing price - 'purchaser' is the zero address - 'msg.sender' is different to the 'purchaser'",
        "params": {
          "purchaser": "The address of the buyer Emits a 'Sale' event",
          "tokenId": "The token identifier"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getSalePrice(uint256)": {
        "notice": "Returns the sale price of a listed token"
      },
      "listTokenForSale(uint256,uint256)": {
        "notice": "Allows 'tokenId' owners to list tokens for sale at a 'price'"
      },
      "purchaseToken(uint256,address)": {
        "notice": "Allows users to purchase listed tokens"
      }
    },
    "version": 1
  }
}